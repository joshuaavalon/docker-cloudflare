{
  "$id": "https://joshuaavalon.github.io/docker-cloudflare/config.schema.json",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "description": "Configuration for docker-cloudflare",
  "type": "object",
  "properties": {
    "api": {
      "type": "string",
      "description": "Cloudflare V4 API url. Default to \"https://api.cloudflare.com/client/v4/\"."
    },
    "logLevel": {
      "type": "string",
      "description": "Level of logging. Default to \"info\""
    },
    "auth": {
      "description": "Authentication used to interact with API.",
      "oneOf": [
        { "$ref": "#/definitions/scopedAuth" },
        { "$ref": "#/definitions/globalAuth" }
      ]
    },
    "domains": {
      "type": "array",
      "description": "List of domains to be updated.",
      "items": {
        "$ref": "#/definitions/domain"
      }
    },
    "ipv4": {
      "type": "array",
      "description": "List of IP echo service that returns IPv4.",
      "items": {
        "$ref": "#/definitions/ipEcho"
      }
    },
    "ipv6": {
      "type": "array",
      "description": "List of IP echo service that returns IPv6.",
      "items": {
        "$ref": "#/definitions/ipEcho"
      }
    },
    "echoParsers": {
      "type": "array",
      "description": "List of IP echo parsers that parses the response from IP echoing service.",
      "items": {
        "$ref": "#/definitions/ipEchoParser"
      }
    }
  },
  "required": ["auth", "domains"],
  "additionalProperties": false,
  "definitions": {
    "globalAuth": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "format": "email",
          "description": "DEPRECIATED. Email address associated with your Cloudflare account."
        },
        "globalToken": {
          "type": "string",
          "description": "DEPRECIATED. API key generated on the \"My Account\" page."
        }
      },
      "required": ["email", "globalToken"],
      "additionalProperties": false
    },
    "scopedAuth": {
      "type": "object",
      "properties": {
        "scopedToken": {
          "type": "string",
          "description": "API Token generated from the User Profile 'API Tokens' page."
        }
      },
      "required": ["scopedToken"],
      "additionalProperties": false
    },
    "domain": {
      "type": "object",
      "description": "Domain name that needed to be update",
      "properties": {
        "name": {
          "type": "string",
          "description": "Domain name that to be updated."
        },
        "type": {
          "type": "string",
          "enum": ["A", "AAAA"],
          "description": "Dns record type. Default to A."
        },
        "proxied": {
          "type": "boolean",
          "description": "Whether the record is receiving the performance and security benefits of Cloudflare. Default to true."
        },
        "create": {
          "type": "boolean",
          "description": "Create record if it does not exits. Default to false."
        },
        "zoneId": {
          "type": "string",
          "description": "Zone ID of the domain to be updated."
        },
        "zoneName": {
          "type": "string",
          "description": "Base domain of the domain to be updated."
        },
        "webhook": {
          "$ref": "#/definitions/webhook",
          "description": "Webhook for DNS update."
        }
      },
      "required": ["name"],
      "additionalProperties": false
    },
    "ipEcho": {
      "type": "object",
      "description": "IP echo service",
      "properties": {
        "type": {
          "type": "string",
          "description": "Name or alias of an IP echo parser."
        },
        "url": {
          "type": "string",
          "description": "Url of the IP echo service."
        }
      },
      "required": ["type", "url"]
    },
    "ipEchoParser": {
      "type": "object",
      "description": "Parser that parses the response from IP echoing service.",
      "properties": {
        "resolve": {
          "type": "string",
          "description": "Name of the JavaScript package."
        },
        "alias": {
          "type": "string",
          "description": "Alias of the JavaScript package. Must be unique from other parsers' alias and name."
        }
      },
      "required": ["resolve"],
      "additionalProperties": false
    },
    "webhook": {
      "type": "object",
      "description": "Fired during the update.",
      "properties": {
        "run": {
          "type": "string",
          "description": "Fired before update run."
        },
        "success": {
          "type": "string",
          "description": "Fired after update success."
        },
        "failure": {
          "type": "string",
          "description": "Fired after update failure."
        },
        "formatter": {
          "instanceOf": "Function",
          "description": "Format message"
        }
      },
      "additionalProperties": false
    }
  }
}
